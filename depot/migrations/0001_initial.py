# Generated by Django 2.0.6 on 2018-06-29 17:53

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('container_id', models.IntegerField(primary_key=True, serialize=False)),
                ('container_name', models.CharField(blank=True, max_length=50, null=True)),
                ('container_type', models.CharField(blank=True, max_length=50, null=True)),
                ('current_location_tmp', models.CharField(blank=True, max_length=100, null=True)),
                ('area_easting', models.IntegerField()),
                ('area_northing', models.IntegerField()),
                ('context_number', models.IntegerField()),
                ('sample_number', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'containers',
                'db_table': 'samples"."container',
                'ordering': ['container_name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Icon',
            fields=[
                ('icon_desc', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('icon', models.ImageField(upload_to='images/icons/')),
            ],
            options={
                'verbose_name_plural': 'icons',
                'db_table': 'samples"."icon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JoinSampleContainer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('area_easting', models.IntegerField()),
                ('area_northing', models.IntegerField()),
                ('context_number', models.IntegerField()),
                ('sample_number', models.IntegerField()),
            ],
            options={
                'db_table': 'samples"."join_sample_container',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('location_identifier', models.IntegerField(blank=True, null=True)),
                ('location_type', models.CharField(blank=True, max_length=100, null=True)),
                ('current_location_tmp', models.CharField(blank=True, max_length=100, null=True)),
                ('location_name', models.CharField(blank=True, max_length=100, null=True)),
                ('orderby', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'locations',
                'db_table': 'samples"."location',
                'ordering': ['orderby'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Samples',
            fields=[
                ('area_easting', models.IntegerField()),
                ('area_northing', models.IntegerField()),
                ('context_number', models.IntegerField()),
                ('sample_number', models.AutoField(primary_key=True, serialize=False)),
                ('material', models.CharField(max_length=25)),
                ('specific_material', models.CharField(blank=True, max_length=50, null=True)),
                ('exterior_color_hue', models.CharField(blank=True, max_length=6, null=True)),
                ('exterior_color_lightness_value', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('exterior_color_chroma', models.IntegerField(blank=True, null=True)),
                ('interior_color_hue', models.CharField(blank=True, max_length=6, null=True)),
                ('interior_color_lightness_value', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('interior_color_chroma', models.IntegerField(blank=True, null=True)),
                ('weight_kilograms', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('sample_description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=25, null=True)),
                ('subcategory', models.CharField(blank=True, max_length=50, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('current_location', models.CharField(max_length=50)),
                ('recovery_type', models.CharField(max_length=25)),
                ('problems', models.CharField(blank=True, max_length=300, null=True)),
                ('image_files', models.CharField(blank=True, max_length=50, null=True)),
                ('number_3d_files', models.CharField(blank=True, db_column='3d_files', max_length=50, null=True)),
                ('chronology', models.CharField(blank=True, max_length=100, null=True)),
                ('analysis_request', models.CharField(blank=True, max_length=50, null=True)),
                ('detailed_sample_description', models.TextField(blank=True, null=True)),
                ('bureaucratic_status', models.CharField(blank=True, max_length=25, null=True)),
                ('subjective_significance', models.NullBooleanField()),
                ('museum_inventory_number', models.IntegerField(blank=True, null=True)),
                ('bureaucratic_status_identifier', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'samples"."samples',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('store_id', models.AutoField(primary_key=True, serialize=False)),
                ('store_name', models.CharField(default='', max_length=200)),
                ('address_1', models.CharField(default='', max_length=200)),
                ('address_2', models.CharField(default='', max_length=200)),
                ('region', models.CharField(default='', max_length=200)),
                ('city', models.CharField(default='', max_length=200)),
                ('zip', models.CharField(default='', max_length=200)),
                ('country', models.CharField(default='Turkey', max_length=200)),
                ('created_by', models.CharField(max_length=200)),
                ('orderby', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'stores',
                'db_table': 'samples"."store',
                'ordering': ['orderby'],
                'managed': False,
            },
        ),
    ]
